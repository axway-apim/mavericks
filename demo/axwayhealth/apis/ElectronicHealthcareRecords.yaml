openapi: 3.0.0
info:
  title: Electronic Health Records API
  description: API for managing electronic health records (EHRs).
  version: 1.0.0

servers:
  - url: https://api.example.com/v1
    description: Production server

components:
  schemas:
    Patient:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique patient ID.
        firstName:
          type: string
          description: Patient's first name.
        lastName:
          type: string
          description: Patient's last name.
        dateOfBirth:
          type: string
          format: date
          description: Date of birth (YYYY-MM-DD).
        gender:
          type: string
          enum: [Male, Female, Other]
          description: Patient's gender.
        contactInfo:
          type: object
          properties:
            email:
              type: string
              format: email
              description: Patient's email address.
            phone:
              type: string
              description: Patient's phone number.

  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: Authorization

paths:
  /patients:
    get:
      summary: List Patients
      description: Retrieve a list of all patients.
      responses:
        '200':
          description: A list of patients.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
        '401':
          description: Unauthorized.
        '500':
          description: Internal Server Error.

    post:
      summary: Create a Patient
      description: Create a new patient record.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '201':
          description: Patient created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '500':
          description: Internal Server Error.

  /patients/{patientId}:
    parameters:
      - name: patientId
        in: path
        required: true
        description: The ID of the patient to retrieve or update.
        schema:
          type: integer
          format: int64

    get:
      summary: Get a Patient
      description: Retrieve information about a specific patient.
      responses:
        '200':
          description: Patient information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          description: Unauthorized.
        '404':
          description: Patient not found.
        '500':
          description: Internal Server Error.

    put:
      summary: Update a Patient
      description: Update information about a specific patient.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: Patient updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '404':
          description: Patient not found.
        '500':
          description: Internal Server Error.

    delete:
      summary: Delete a Patient
      description: Delete a specific patient record.
      responses:
        '204':
          description: Patient deleted successfully.
        '401':
          description: Unauthorized.
        '404':
          description: Patient not found.
        '500':
          description: Internal Server Error.
