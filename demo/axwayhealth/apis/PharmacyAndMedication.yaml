openapi: 3.0.0
info:
  title: Pharmacy and Medication API
  description: API for managing pharmacy information and medication data.
  version: 1.0.0

servers:
  - url: https://api.example.com/v1
    description: Production server

components:
  schemas:
    Medication:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique medication ID.
        name:
          type: string
          description: Medication name.
        description:
          type: string
          description: Description of the medication.
        dosage:
          type: string
          description: Dosage instructions for the medication.
        price:
          type: number
          format: float
          description: Price of the medication.
    
    Prescription:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique prescription ID.
        patientId:
          type: integer
          description: ID of the patient for whom the prescription is issued.
        medicationId:
          type: integer
          description: ID of the prescribed medication.
        quantity:
          type: integer
          description: Quantity of medication prescribed.
        issueDate:
          type: string
          format: date
          description: Date when the prescription was issued (YYYY-MM-DD).
        expirationDate:
          type: string
          format: date
          description: Date when the prescription expires (YYYY-MM-DD).

  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: Authorization

paths:
  /medications:
    get:
      summary: List Medications
      description: Retrieve a list of available medications.
      responses:
        '200':
          description: A list of medications.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Medication'
        '401':
          description: Unauthorized.
        '500':
          description: Internal Server Error.

  /prescriptions:
    get:
      summary: List Prescriptions
      description: Retrieve a list of prescriptions issued.
      responses:
        '200':
          description: A list of prescriptions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prescription'
        '401':
          description: Unauthorized.
        '500':
          description: Internal Server Error.

    post:
      summary: Create a Prescription
      description: Issue a new prescription for a patient.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prescription'
      responses:
        '201':
          description: Prescription issued successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '500':
          description: Internal Server Error.

  /prescriptions/{prescriptionId}:
    parameters:
      - name: prescriptionId
        in: path
        required: true
        description: The ID of the prescription to retrieve or update.
        schema:
          type: integer
          format: int64

    get:
      summary: Get a Prescription
      description: Retrieve information about a specific prescription.
      responses:
        '200':
          description: Prescription information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '401':
          description: Unauthorized.
        '404':
          description: Prescription not found.
        '500':
          description: Internal Server Error.

    put:
      summary: Update a Prescription
      description: Update information about a specific prescription.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Prescription'
      responses:
        '200':
          description: Prescription updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '404':
          description: Prescription not found.
        '500':
          description: Internal Server Error.

    delete:
      summary: Delete a Prescription
      description: Delete a specific prescription.
      responses:
        '204':
          description: Prescription deleted successfully.
        '401':
          description: Unauthorized.
        '404':
          description: Prescription not found.
        '500':
          description: Internal Server Error.
